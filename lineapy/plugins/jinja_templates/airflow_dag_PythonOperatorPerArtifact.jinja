{% extends "airflow_base_dag.jinja" %}

{% block plugin_import_block %}
import {{ MODULE_NAME }}
import pickle
import pathlib
from airflow import DAG
from airflow.utils.dates import days_ago
from airflow.operators.python_operator import PythonOperator
{% endblock %}

{% block plugin_dag_block %}
def dag_setup():
    pickle_folder = pathlib.Path('/tmp').joinpath('{{ DAG_NAME }}')
    if not pickle_folder.exists():
        pickle_folder.mkdir()

def dag_teardown():
    pickle_files = pathlib.Path('/tmp').joinpath('{{ DAG_NAME }}').glob('*.pickle')
    for f in pickle_files:
        f.unlink()
{% for TASK_DEF in task_definitions %}
{{ TASK_DEF }} 
{% endfor %}
{% endblock %}

{% block plugin_tasks_block %}

default_dag_args = {
    "owner": "{{ OWNER }}",
    "retries": {{ RETRIES }},
    "start_date": {{ START_DATE }},
}

with DAG(
    dag_id="{{ DAG_NAME }}_dag",
    schedule_interval="{{ SCHEDULE_INTERVAL }}",
    max_active_runs={{ MAX_ACTIVE_RUNS }},
    catchup={{ CATCHUP }},
    default_args=default_dag_args,
) as dag:

    setup = PythonOperator(
        task_id="dag_setup",
        python_callable=dag_setup,
    )

    teardown = PythonOperator(
        task_id="dag_teardown",
        python_callable=dag_teardown,
    )

{% for TASK_NAME in tasks %}
    {{ TASK_NAME }} = PythonOperator(
        task_id="{{ TASK_NAME }}_task", python_callable=task_{{ TASK_NAME }},
    )
{% endfor %}
{% if task_dependencies is not none %}
{% for TASK_DEPENDENCIES in task_dependencies %}
    {{TASK_DEPENDENCIES}}
{% endfor %}
{%endif %}
{% endblock %}

